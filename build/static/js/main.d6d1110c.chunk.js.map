{"version":3,"sources":["reducers/groceriesReducer.js","actions/actionTypes.js","reducers/initialState.js","reducers/index.js","store/configureStore.js","actions/groceryAction.js","components/GroceryModal.jsx","components/TotalPrice.jsx","components/GroceryTable.jsx","components/GroceryList.jsx","components/App.jsx","serviceWorker.js","index.js"],"names":["newState","itemIndex","GET_GROCERIES_SUCCESS","ADD_GROCERY_SUCCESS","DELETE_GROCERY_SUCCESS","BUY_GROCERY_SUCCESS","EDIT_GROCERY_SUCCESS","initialState","groceries","purchasedGrocery","purchased","rootReducer","combineReducers","state","arguments","length","undefined","action","type","types","Object","toConsumableArray","concat","assign","grocery","filter","_id","groceryId","findIndex","slice","window","__REDUX_DEVTOOLS_EXTENSION__","addGrocery","dispatch","axios","method","url","data","then","response","toastr","success","message","catch","error","deleteGrocery","deleteGrocerySuccess","buyGrocery","buyGrocerySuccess","editGrocery","editGrocerySuccess","item","GroceryModal","_ref","errors","updateDetails","show","onHide","groceryName","groceryPrice","react_default","a","createElement","Modal","aria-labelledby","Header","closeButton","Title","id","Body","style","width","marginLeft","marginRight","htmlFor","className","defaultValue","name","required","onChange","Footer","onClick","TotalPrice","totalPrice","map","price","GroceryTable","onShow","scope","i","key","index","disabled","value","GroceryList","_Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showEdit","handleHide","bind","assertThisInitialized","onDelete","onBuy","handleShowEdit","inherits","createClass","setState","e","preventDefault","_this$state","groceryDetails","_this$state2","defineProperty","target","_this2","float","padding","components_TotalPrice","components_GroceryTable","components_GroceryModal","Component","connect","bindActionCreators","App","components_GroceryList","Boolean","location","hostname","match","store","compose","applyMiddleware","thunk","devToolsExtension","f","createStore","console","log","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"2HAGIA,EAAUC,yECHDC,EAAwB,wBACxBC,EAAsB,sBACtBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBCApBC,EAJK,CACnBC,UAAW,IFEYC,EAAmB,CAAEC,WAAW,GGAzD,IAIeC,EAJKC,YAAgB,CAClCJ,UHCa,WAAkE,IAAxCK,EAAwCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAhCP,EAAaC,UAAWS,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/E,OAAQC,EAAOC,MACb,KAAKC,EACH,OAAOF,EAAOT,UAEhB,KAAKW,EACH,OAAOC,OAAAC,EAAA,EAAAD,CACFP,GADLS,OAAA,CACYF,OAAOG,OAAO,GAAIN,EAAOO,WAGvC,KAAKL,EACH,OAAOC,OAAAC,EAAA,EAAAD,CACFP,EAAMY,OAAO,SAAAD,GAAO,OAAIA,EAAQE,MAAQT,EAAOU,aAGtD,KAAKR,EAUH,OARAlB,GADAD,EAAYa,GACSe,UAAU,SAAAJ,GAAO,OAAIA,EAAQE,MAAQT,EAAOU,aACjElB,EAAmBT,EAASC,IACXS,WAAY,EAC7BV,EAAQoB,OAAAC,EAAA,EAAAD,CACHpB,EAAS6B,MAAM,EAAG5B,IADfqB,OAAA,CAENb,GAFMW,OAAAC,EAAA,EAAAD,CAGHpB,EAAS6B,MAAM5B,EAAY,KAIhC,KAAKkB,EASL,OAPElB,GADAD,EAAYa,GACSe,UAAU,SAAAJ,GAAO,OAAIA,EAAQE,MAAQT,EAAOU,YACjElB,EAAmBQ,EAAOO,QAC1BxB,EAAQoB,OAAAC,EAAA,EAAAD,CACHpB,EAAS6B,MAAM,EAAG5B,IADfqB,OAAA,CAENb,GAFMW,OAAAC,EAAA,EAAAD,CAGHpB,EAAS6B,MAAM5B,EAAY,KAIpC,QACE,OAAOY,SIvCKiB,OAAOC,8BACvBD,OAAOC,gEC8CIC,EAAa,SAACR,GAAD,OAAa,SAACS,GACpC,OAAOC,IAAM,CACXC,OAAQ,OACRC,IAAK,gBACLC,KAAMb,IAEPc,KAAK,SAAAC,GA9CuB,IAACf,EA+C5BgB,IAAOC,QAAQF,EAASF,KAAKK,SAC7BT,GAhD4BT,EAgDDe,EAASF,KAAKb,QA/CtC,CACLN,KAAMC,EACNK,eA+CCmB,MAAM,SAACC,GACNJ,IAAOI,MAAMA,OAINC,EAAgB,SAAClB,GAAD,OAAe,SAAAM,GAC1C,OAAOC,IAAM,CACXC,OAAQ,SACRC,IAAG,iBAAAd,OAAmBK,KAEvBW,KAAK,SAAAC,GACJC,IAAOC,QAAQF,EAASF,KAAKK,SAC7BT,EAvDgC,SAACN,GACnC,MAAO,CACLT,KAAMC,EACNQ,aAoDSmB,CAAqBnB,MAE/BgB,MAAM,SAACC,GACNJ,IAAOI,MAAMA,OAIJG,EAAa,SAACpB,GAAD,OAAe,SAAAM,GACvC,OAAOC,IAAM,CACXC,OAAQ,MACRC,IAAG,iBAAAd,OAAmBK,KAEvBW,KAAK,SAAAC,GACJC,IAAOC,QAAQF,EAASF,KAAKK,SAC7BT,EA9D6B,SAACN,GAChC,MAAO,CACLT,KAAMC,EACNQ,aA2DSqB,CAAkBrB,MAE5BgB,MAAM,SAACC,GACNJ,IAAOI,MAAMA,OAKJK,EAAc,SAACtB,EAAYH,GAAb,OAAyB,SAAAS,GAClD,OAAOC,IAAM,CACXC,OAAQ,QACRC,IAAG,iBAAAd,OAAmBK,GACtBU,KAAMb,IAEPc,KAAK,SAAAC,GACJC,IAAOC,QAAQF,EAASF,KAAKK,SAC7BT,EAvE8B,SAACN,EAAWH,GAC5C,MAAO,CACLN,KAAMC,EACNQ,YACAH,WAmES0B,CAAmBvB,EAAWY,EAASF,KAAKc,SAEtDR,MAAM,SAACC,GACNJ,IAAOI,MAAMA,gFC9BFQ,EA1EM,SAAAC,GAAwG,IAAtGC,EAAsGD,EAAtGC,OAAQtB,EAA8FqB,EAA9FrB,WAAYiB,EAAkFI,EAAlFJ,YAAaM,EAAqEF,EAArEE,cAAeC,EAAsDH,EAAtDG,KAAMC,EAAgDJ,EAAhDI,OAAQC,EAAwCL,EAAxCK,YAAaC,EAA2BN,EAA3BM,aAAcnC,EAAa6B,EAAb7B,QAC9G,OACEoC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACIP,KAAMA,EACNC,OAAQA,EACRO,kBAAgB,yBAEhBJ,EAAAC,EAAAC,cAACC,EAAA,EAAME,OAAP,CAAcC,aAAW,GACvBN,EAAAC,EAAAC,cAACC,EAAA,EAAMI,MAAP,CAAaC,GAAG,yBAAhB,oBAGAR,EAAAC,EAAAC,cAACC,EAAA,EAAMM,KAAP,CAAYC,MAAO,CAAEC,MAAO,OAAQC,WAAY,OAAQC,YAAa,SACrEb,EAAAC,EAAAC,cAAA,SAAOY,QAAQ,OAAOC,UAAU,UAAhC,iBAGCrB,EAAOI,aACNE,EAAAC,EAAAC,cAAA,QAAMa,UAAU,gBAAef,EAAAC,EAAAC,cAAA,WAC5BR,EAAOI,aAGZE,EAAAC,EAAAC,cAAA,SACE5C,KAAK,OACLyD,UAAU,eACVC,aAAclB,GAAe,GAC7BU,GAAG,cACHS,KAAK,cACLC,UAAQ,EACRC,SAAUxB,IAEZK,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOY,QAAQ,OAAOC,UAAU,UAAhC,2BAGCrB,EAAOK,cACNC,EAAAC,EAAAC,cAAA,QAAMa,UAAU,gBAAef,EAAAC,EAAAC,cAAA,WAC5BR,EAAOK,cAGZC,EAAAC,EAAAC,cAAA,SACE5C,KAAK,SACLyD,UAAU,eACVC,aAAcjB,GAAgB,GAC9BS,GAAG,eACHS,KAAK,eACLC,UAAQ,EACRC,SAAUxB,KAGZK,EAAAC,EAAAC,cAACC,EAAA,EAAMiB,OAAP,KACCxD,EAAQ4C,GACPR,EAAAC,EAAAC,cAAA,UACA5C,KAAK,SACLkD,GAAG,cACHO,UAAU,yEAEVM,QAAS,kBAAMhC,EAAYzB,KAL3B,aAQAoC,EAAAC,EAAAC,cAAA,UACA5C,KAAK,SACLkD,GAAG,cACHO,UAAU,yEAEVM,QAASjD,GALT,gBC9CCkD,EAdI,SAAA7B,GAAiB,IAAf7C,EAAe6C,EAAf7C,UACf2E,EAAa,EAMjB,OALA3E,EAAU4E,IAAI,SAAA5D,GACZ,GAAIA,EAAQd,UACV,OAAOyE,GAAc3D,EAAQ6D,QAI7BzB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,gCAAyBqB,KCmDlBG,EA5DM,SAAAjC,GAAoD,IAAlD7C,EAAkD6C,EAAlD7C,UAAWqC,EAAuCQ,EAAvCR,cAAeE,EAAwBM,EAAxBN,WAAYwC,EAAYlC,EAAZkC,OACzD,OACE3B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAOa,UAAU,mFAAmFL,MAAO,CAAEE,WAAY,MAAOC,YAAa,MAAOF,MAAO,QACzJX,EAAAC,EAAAC,cAAA,SAAOa,UAAU,sDACff,EAAAC,EAAAC,cAAA,MAAIa,UAAU,OACZf,EAAAC,EAAAC,cAAA,MAAI0B,MAAM,MAAMb,UAAU,uBAA1B,OAGAf,EAAAC,EAAAC,cAAA,MAAI0B,MAAM,MAAMb,UAAU,uBAA1B,gBAGAf,EAAAC,EAAAC,cAAA,MAAI0B,MAAM,MAAMb,UAAU,uBAA1B,SAGAf,EAAAC,EAAAC,cAAA,MAAI0B,MAAM,MAAMb,UAAU,wBAC1Bf,EAAAC,EAAAC,cAAA,MAAI0B,MAAM,MAAMb,UAAU,wBAC1Bf,EAAAC,EAAAC,cAAA,MAAI0B,MAAM,MAAMb,UAAU,0BAG9Bf,EAAAC,EAAAC,cAAA,aACCtD,EAAU4E,IAAI,SAAC5D,EAASiE,GAAV,OACb7B,EAAAC,EAAAC,cAAA,MAAIM,GAAG,KACLsB,IAAKD,EACLE,MAAOF,EACPd,UAAU,iCACVf,EAAAC,EAAAC,cAAA,MAAIa,UAAU,uBAAuBc,EAAI,GACzC7B,EAAAC,EAAAC,cAAA,UAAKtC,EAAQqD,MACbjB,EAAAC,EAAAC,cAAA,oBAAatC,EAAQ6D,OACrBzB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,SACA5C,KAAK,SACL0E,SAAUpE,EAAQd,UAClBmF,MAAOrE,EAAQd,UAAY,SAAW,MACtCiE,UAAU,kBACVM,QAAS,kBAAMlC,EAAWvB,EAAQE,SAGpCkC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAQ5C,KAAK,SAASyD,UAAU,qBAChCM,QAAS,kBAAMM,EAAO/D,KADtB,iBAMFoC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UAAQ5C,KAAK,SAASyD,UAAU,oBAChCM,QAAS,kBAAMpC,EAAcrB,EAAQE,OADrC,0BCvCHoE,EAAb,SAAAC,GACE,SAAAD,EAAYE,GAAO,IAAAC,EAAA,OAAA7E,OAAA8E,EAAA,EAAA9E,CAAA+E,KAAAL,IACjBG,EAAA7E,OAAAgF,EAAA,EAAAhF,CAAA+E,KAAA/E,OAAAiF,EAAA,EAAAjF,CAAA0E,GAAAQ,KAAAH,KAAMH,KACDnF,MAAQ,CACX2C,MAAM,EACN+C,UAAU,EACV7C,YAAa,GACbC,aAAc,GACdL,OAAQ,GACR9B,QAAS,IAGbyE,EAAKO,WAAaP,EAAKO,WAAWC,KAAhBrF,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAA6E,KAClBA,EAAK1C,cAAgB0C,EAAK1C,cAAckD,KAAnBrF,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAA6E,KACrBA,EAAKjE,WAAaiE,EAAKjE,WAAWyE,KAAhBrF,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAA6E,KAClBA,EAAKhD,YAAcgD,EAAKhD,YAAYwD,KAAjBrF,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAA6E,KACnBA,EAAKU,SAAWV,EAAKU,SAASF,KAAdrF,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAA6E,KAChBA,EAAKW,MAAQX,EAAKW,MAAMH,KAAXrF,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAA6E,KACbA,EAAKY,eAAiBZ,EAAKY,eAAeJ,KAApBrF,OAAAsF,EAAA,EAAAtF,QAAAsF,EAAA,EAAAtF,CAAA6E,KAjBHA,EADrB,OAAA7E,OAAA0F,EAAA,EAAA1F,CAAA0E,EAAAC,GAAA3E,OAAA2F,EAAA,EAAA3F,CAAA0E,EAAA,EAAAJ,IAAA,aAAAG,MAAA,WAuBEM,KAAKa,SAAS,CACZtD,YAAa,GACbC,aAAc,GACdH,MAAM,MA1BV,CAAAkC,IAAA,iBAAAG,MAAA,SA6BerE,GACb2E,KAAKa,SAAS,CACZtD,YAAalC,EAAQqD,KACrBlB,aAAcnC,EAAQ6D,MACtB7B,MAAM,EACNhC,cAlCJ,CAAAkE,IAAA,aAAAG,MAAA,SAsCWoB,GACTA,EAAEC,iBADU,IAAAC,EAEkChB,KAAKtF,MAA3C6C,EAFIyD,EAEJzD,YAAaC,EAFTwD,EAESxD,aAAcL,EAFvB6D,EAEuB7D,OACnC,GAAoB,KAAhBI,GAAuC,OAAjBC,EAAuB,CAC/C,IAAMyD,EAAiB,CACrB1D,YAAayC,KAAKtF,MAAM6C,YACxBC,aAAcwC,KAAKtF,MAAM8C,cAE3BwC,KAAKH,MAAMhE,WAAWoF,GACtBjB,KAAKa,SAAS,CACZxD,MAAM,EACNE,YAAa,GACbC,aAAc,GACdL,OAAQ,SAGU,KAAhBI,IACFJ,EAAOI,YAAc,mCAEF,KAAjBC,IACFL,EAAOK,aAAe,oCAExBwC,KAAKa,SAAS,CAAE1D,aA5DpB,CAAAoC,IAAA,cAAAG,MAAA,SAgEYrE,GAAS,IAAA6F,EAC2BlB,KAAKtF,MAA3C6C,EADW2D,EACX3D,YAAaC,EADF0D,EACE1D,aAAcL,EADhB+D,EACgB/D,OACnC,GAAoB,KAAhBI,GAAuC,OAAjBC,EAAuB,CAC/C,IAAMyD,EAAiB,CACrB1D,YAAayC,KAAKtF,MAAM6C,YACxBC,aAAcwC,KAAKtF,MAAM8C,cAE3BwC,KAAKH,MAAM/C,YAAYzB,EAAQE,IAAK0F,GACpCjB,KAAKa,SAAS,CACZxD,MAAM,EACNE,YAAa,GACbC,aAAc,GACdL,OAAQ,SAGU,KAAhBI,IACFJ,EAAOI,YAAc,mCAEF,KAAjBC,IACFL,EAAOK,aAAe,oCAExBwC,KAAKa,SAAS,CAAE1D,aArFpB,CAAAoC,IAAA,gBAAAG,MAAA,SAyFcoB,GACZd,KAAKa,SAAL5F,OAAAkG,EAAA,EAAAlG,CAAA,GACG6F,EAAEM,OAAO1C,KAAOoC,EAAEM,OAAO1B,UA3F9B,CAAAH,IAAA,WAAAG,MAAA,SA+FSzB,GACP+B,KAAKH,MAAMnD,cAAcuB,KAhG3B,CAAAsB,IAAA,QAAAG,MAAA,SAmGMzB,GACJ+B,KAAKH,MAAMjD,WAAWqB,KApGxB,CAAAsB,IAAA,SAAAG,MAAA,WAuGW,IAAA2B,EAAArB,KACE7C,EAAW6C,KAAKtF,MAAhByC,OACT,OACEM,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIa,UAAU,eAAd,qBACAf,EAAAC,EAAAC,cAAA,OAAKa,UAAU,8BAA8BL,MAAO,CAAEmD,MAAO,QAASC,QAAS,OAC7E9D,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAC6D,EAAD,CAAYnH,UAAW2F,KAAKH,MAAMxF,cAGtCoD,EAAAC,EAAAC,cAAC8D,EAAD,CACEpH,UAAW2F,KAAKH,MAAMxF,UACtBwB,WAAYmE,KAAKnE,WACjBa,cAAesD,KAAKQ,SACpB5D,WAAYoD,KAAKS,MACjBrB,OAAQY,KAAKU,iBAGfjD,EAAAC,EAAAC,cAAC+D,EAAD,CACEvE,OAAQA,EACRtB,WAAYmE,KAAKnE,WACjBiB,YAAakD,KAAKlD,YAClBM,cAAe4C,KAAK5C,cACpBE,OAAQ0C,KAAKK,WACbhD,KAAM2C,KAAKtF,MAAM2C,KACjBE,YAAayC,KAAKtF,MAAM6C,YACxBC,aAAcwC,KAAKtF,MAAM8C,aACzBnC,QAAS2E,KAAKtF,MAAMW,UAEtBoC,EAAAC,EAAAC,cAAA,OAAKa,UAAU,eACbf,EAAAC,EAAAC,cAAA,UAAQa,UAAU,0BAChBM,QAAS,kBAAMuC,EAAKR,SAAS,CAAExD,MAAM,MADvC,qBArIVsC,EAAA,CAAiCgC,aAgKlBC,cAhBS,SAAAlH,GAAK,MAAK,CAChCL,UAAWK,EAAML,YAGQ,SAAAyB,GAAQ,OACjC+F,YACE,CACEhG,aACAa,gBACAE,aACAE,eAEFhB,IAIW8F,CAA6CjC,GC1J7CmC,mLARX,OACErE,EAAAC,EAAAC,cAAA,OAAKa,UAAU,OACbf,EAAAC,EAAAC,cAACoE,EAAD,cAJUJ,aCOEK,QACW,cAA7BrG,OAAOsG,SAASC,UAEe,UAA7BvG,OAAOsG,SAASC,UAEhBvG,OAAOsG,SAASC,SAASC,MACvB,2DCTN,IAAMC,ERQUC,YACZC,YAAgBC,KAChB5G,OAAO6G,kBAAoB7G,OAAO6G,oBAAsB,SAAAC,GAAC,OAAIA,GAFjDJ,CAGZK,IAHYL,CAGC7H,GQVjB4H,EAAMtG,SP+B6B,SAACA,GAChC,OAAOC,IAAM,CACXC,OAAQ,MACRC,IAAK,kBAENE,KAAK,SAAAC,GAzCyB,IAAA/B,EA0C7ByB,GA1C6BzB,EA0CA+B,EAASF,KAAKA,KAzCxC,CACLnB,KAAMC,EACNX,iBAyCCmC,MAAM,SAACC,GAAYkG,QAAQC,IAAInG,OOrCpCoG,IAASC,OACPrF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAUX,MAAOA,GACf3E,EAAAC,EAAAC,cAACqF,EAAD,OAEJC,SAASC,eAAe","file":"static/js/main.d6d1110c.chunk.js","sourcesContent":["import * as types from '../actions/actionTypes';\nimport initialState from './initialState'\n\nlet newState, itemIndex, purchasedGrocery = { purchased: false};\n\nexport default function groceriesReducer(state = initialState.groceries, action) {\n  switch (action.type) {\n    case types.GET_GROCERIES_SUCCESS:\n      return action.groceries;\n\n    case types.ADD_GROCERY_SUCCESS:\n      return [\n        ...state, Object.assign({}, action.grocery)\n      ]\n\n    case types.DELETE_GROCERY_SUCCESS:\n      return [\n        ...state.filter(grocery => grocery._id !== action.groceryId)\n      ];\n\n    case types.BUY_GROCERY_SUCCESS:\n      newState =  state;      \n      itemIndex = newState.findIndex(grocery => grocery._id === action.groceryId);\n      purchasedGrocery = newState[itemIndex];\n      purchasedGrocery.purchased = true;\n      newState = [\n        ...newState.slice(0, itemIndex),\n        purchasedGrocery,\n        ...newState.slice(itemIndex + 1)\n      ]\n      return newState;\n\n      case types.EDIT_GROCERY_SUCCESS:\n        newState =  state;\n        itemIndex = newState.findIndex(grocery => grocery._id === action.groceryId);\n        purchasedGrocery = action.grocery;\n        newState = [\n          ...newState.slice(0, itemIndex),\n          purchasedGrocery,\n          ...newState.slice(itemIndex + 1)\n        ]\n      return newState;\n\n    default:\n      return state;\n  }\n}","export const GET_GROCERIES_SUCCESS = 'GET_GROCERIES_SUCCESS'\nexport const ADD_GROCERY_SUCCESS = 'ADD_GROCERY_SUCCESS'\nexport const DELETE_GROCERY_SUCCESS = 'DELETE_GROCERY_SUCCESS'\nexport const BUY_GROCERY_SUCCESS = 'BUY_GROCERY_SUCCESS'\nexport const EDIT_GROCERY_SUCCESS = 'EDIT_GROCERY_SUCCESS'\n","const initialState = {\n  groceries: []\n}\n\nexport default  initialState;","import { combineReducers } from 'redux'\nimport groceries from './groceriesReducer'\n\nconst rootReducer = combineReducers({\n  groceries\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk'\nimport reduxImmutableStateInvariant from 'redux-immutable-state-invariant';\nimport rootReducer from '../reducers';\n\nconst enhancers = window.__REDUX_DEVTOOLS_EXTENSION__ && \n  window.__REDUX_DEVTOOLS_EXTENSION__();\n\nconst initialState = {};\n\nexport const configureStore = () => {\n  // const store = createStore(\n  //   rootReducer, \n  //   initialState,\n  //   enhancers,\n  //   applyMiddleware(thunk)\n  // );\n  const store = compose(\n    applyMiddleware(thunk),\n    window.devToolsExtension ? window.devToolsExtension() : f => f\n  )(createStore)(rootReducer);\n  return store;\n}","import * as types from './actionTypes';\nimport axios from 'axios';\nimport toastr from 'toastr';\n\n\nexport const getGroceriesSuccess = groceries => {\n  return {\n    type: types.GET_GROCERIES_SUCCESS,\n    groceries\n  }\n}\n\nexport const addGrocerySuccess = (grocery) => {\n  return {\n    type: types.ADD_GROCERY_SUCCESS,\n    grocery\n  }\n}\n\nexport const deleteGrocerySuccess = (groceryId) => {\n  return {\n    type: types.DELETE_GROCERY_SUCCESS,\n    groceryId\n  }\n}\n\nexport const buyGrocerySuccess = (groceryId) => {\n  return {\n    type: types.BUY_GROCERY_SUCCESS,\n    groceryId\n  }\n}\n\nexport const editGrocerySuccess = (groceryId, grocery) => {\n  return {\n    type: types.EDIT_GROCERY_SUCCESS,\n    groceryId,\n    grocery\n  }\n}\n\nexport const loadGroceries = () => (dispatch) => {\n    return axios({\n      method: 'GET',\n      url: '/api/v1/items'\n    })\n    .then(response => {\n      dispatch(getGroceriesSuccess(response.data.data))\n    })\n    .catch((error) => { console.log(error) });\n}\n\nexport const addGrocery = (grocery) => (dispatch) =>  {\n    return axios({\n      method: 'POST',\n      url: '/api/v1/items',\n      data: grocery\n    })\n    .then(response => {\n      toastr.success(response.data.message)\n      dispatch(addGrocerySuccess(response.data.grocery))\n    })\n    .catch((error) => { \n      toastr.error(error)\n    });\n}\n\nexport const deleteGrocery = (groceryId) => dispatch =>  {\n  return axios({\n    method: 'DELETE',\n    url: `/api/v1/items/${groceryId}`\n  })\n  .then(response => {\n    toastr.success(response.data.message)\n    dispatch(deleteGrocerySuccess(groceryId))\n  })\n  .catch((error) => { \n    toastr.error(error)\n  });\n}\n\nexport const buyGrocery = (groceryId) => dispatch =>  {\n  return axios({\n    method: 'PUT',\n    url: `/api/v1/items/${groceryId}`\n  })\n  .then(response => {\n    toastr.success(response.data.message)\n    dispatch(buyGrocerySuccess(groceryId))\n  })\n  .catch((error) => { \n    toastr.error(error)\n  });\n}\n\n\nexport const editGrocery = (groceryId,  grocery) => dispatch =>  {\n  return axios({\n    method: 'PATCH',\n    url: `/api/v1/items/${groceryId}`,\n    data: grocery\n  })\n  .then(response => {\n    toastr.success(response.data.message)\n    dispatch(editGrocerySuccess(groceryId, response.data.item))\n  })\n  .catch((error) => { \n    toastr.error(error)\n  });\n}","import React from 'react';\nimport { Modal } from 'react-bootstrap'\n\nconst GroceryModal = ({errors, addGrocery, editGrocery, updateDetails, show, onHide, groceryName, groceryPrice, grocery}) => {\n  return (\n    <div>\n      <Modal\n          show={show}\n          onHide={onHide}\n          aria-labelledby=\"contained-modal-title\"\n          >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title\">Grocery Details\n            </Modal.Title>\n            </Modal.Header>\n            <Modal.Body style={{ width: '100%', marginLeft: 'auto', marginRight: 'auto'}}>\n            <label htmlFor=\"name\" className=\"active\">\n              Grocery Name:\n            </label>\n            {errors.groceryName && (\n              <span className=\"alert-danger\"><br />\n                {errors.groceryName}\n              </span>\n            )}\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              defaultValue={groceryName || ''}\n              id=\"groceryName\"\n              name=\"groceryName\"\n              required\n              onChange={updateDetails}\n            />\n            <br />\n            <label htmlFor=\"name\" className=\"active\">\n              Grocery Price (&#8358;):\n            </label>\n            {errors.groceryPrice && (\n              <span className=\"alert-danger\"><br />\n                {errors.groceryPrice}\n              </span>\n            )}\n            <input\n              type=\"number\"\n              className=\"form-control\"\n              defaultValue={groceryPrice || ''}\n              id=\"groceryPrice\"\n              name=\"groceryPrice\"\n              required\n              onChange={updateDetails}\n            />\n            </Modal.Body>\n            <Modal.Footer>\n            {grocery.id ? \n              <button\n              type=\"submit\"\n              id=\"add-grocery\"\n              className=\"waves-effect waves-dark\n              btn right hoverable dark-green btn btn-primary\"\n              onClick={() => editGrocery(grocery)}\n              >Edit Item\n            </button>\n            : <button\n              type=\"submit\"\n              id=\"add-grocery\"\n              className=\"waves-effect waves-dark\n              btn right hoverable dark-green btn btn-primary\"\n              onClick={addGrocery}\n              >Add Item\n            </button>}\n            \n            </Modal.Footer>\n          </Modal>\n    </div>\n  );\n}\n\nexport default GroceryModal;\n","import React from 'react';\n\nconst TotalPrice = ({groceries}) => {\n  let totalPrice = 0;\n  groceries.map(grocery => {\n    if (grocery.purchased){\n      return totalPrice += grocery.price\n    }\n  })\n  return (\n      <div>\n        <p>Total Price: &#8358; {totalPrice}</p>\n      </div>\n    );\n  }\n\nexport default TotalPrice;\n","import React from 'react';\n\nconst GroceryTable = ({groceries, deleteGrocery, buyGrocery, onShow}) => {\n    return (\n      <div>\n        <table className=\"table text-center table-hover mx-auto bg-white table-responsive-sm table-striped\" style={{ marginLeft: '25%', marginRight: '10%', width: '50%' }}>\n          <thead className=\"text-center text-white bg-info border border-white\">\n            <tr className=\"p-3\">\n              <th scope=\"col\" className=\"border border-white\">\n                S/N\n              </th>\n              <th scope=\"col\" className=\"border border-white\">\n                Grocery Name\n              </th>\n              <th scope=\"col\" className=\"border border-white\">\n                Price\n              </th>\n              <th scope=\"col\" className=\"border border-white\"></th>\n              <th scope=\"col\" className=\"border border-white\"></th>\n              <th scope=\"col\" className=\"border border-white\"></th>\n            </tr>\n          </thead>\n          <tbody>\n          {groceries.map((grocery, i) =>\n            <tr id=\"#1\"\n              key={i}\n              index={i}\n              className=\"border border-white text-left\">\n              <td className=\"border border-white\">{i + 1}</td>\n              <td>{grocery.name}</td>\n              <td>&#8358; {grocery.price}</td>\n              <td>\n                <input\n                type=\"submit\"\n                disabled={grocery.purchased}\n                value={grocery.purchased ? 'Bought' : 'Buy'}\n                className=\"btn btn-primary\"\n                onClick={() => buyGrocery(grocery._id)}\n          />\n              </td>\n              <td>\n                <button type=\"button\" className=\"btn-warning btn-sm\"\n                onClick={() => onShow(grocery)}\n                >\n                  Edit Product\n                </button>\n              </td>\n              <td>\n                <button type=\"button\" className=\"btn-danger btn-sm\"\n                onClick={() => deleteGrocery(grocery._id)}>\n                  Delete Product\n                </button>\n              </td>\n            </tr>\n          )}\n          </tbody>\n        </table>\n\n      </div>\n    );\n  }\n\nexport default GroceryTable;\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { addGrocery, deleteGrocery, buyGrocery, editGrocery } from '../actions/groceryAction'\nimport GroceryModal from './GroceryModal';\nimport TotalPrice from './TotalPrice';\n\nimport GroceryTable from './GroceryTable'\n\nexport class GroceryList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: false,\n      showEdit: false,\n      groceryName: '',\n      groceryPrice: '',\n      errors: {},\n      grocery: {}\n    };\n  \n  this.handleHide = this.handleHide.bind(this);\n  this.updateDetails = this.updateDetails.bind(this)\n  this.addGrocery = this.addGrocery.bind(this)\n  this.editGrocery = this.editGrocery.bind(this)\n  this.onDelete = this.onDelete.bind(this)\n  this.onBuy = this.onBuy.bind(this)\n  this.handleShowEdit = this.handleShowEdit.bind(this)\n\n  }\n\nhandleHide() {\n  this.setState({\n    groceryName: '',\n    groceryPrice: '', \n    show: false });\n}\n\nhandleShowEdit(grocery) {\n  this.setState({\n    groceryName: grocery.name,\n    groceryPrice: grocery.price,\n    show: true,\n    grocery\n  })\n}\n\naddGrocery(e) {\n  e.preventDefault();\n  const { groceryName, groceryPrice, errors } = this.state;\n  if (groceryName !== '' && groceryPrice !== null ){\n    const groceryDetails = {\n      groceryName: this.state.groceryName,\n      groceryPrice: this.state.groceryPrice\n    }\n    this.props.addGrocery(groceryDetails)\n    this.setState({\n      show: false,       \n      groceryName: '',\n      groceryPrice: '',\n      errors: {} \n    });\n  } else {\n    if (groceryName === ''){\n      errors.groceryName = 'Please fill in the grocery name'\n    } \n    if (groceryPrice === '' ){\n      errors.groceryPrice = 'Please fill in the grocery price'\n    }\n    this.setState({ errors })\n  }\n}\n\neditGrocery(grocery) {\n  const { groceryName, groceryPrice, errors } = this.state;\n  if (groceryName !== '' && groceryPrice !== null ){\n    const groceryDetails = {\n      groceryName: this.state.groceryName,\n      groceryPrice: this.state.groceryPrice\n    }\n    this.props.editGrocery(grocery._id, groceryDetails)\n    this.setState({\n      show: false,       \n      groceryName: '',\n      groceryPrice: '',\n      errors: {} \n    });\n  } else {\n    if (groceryName === ''){\n      errors.groceryName = 'Please fill in the grocery name'\n    } \n    if (groceryPrice === '' ){\n      errors.groceryPrice = 'Please fill in the grocery price'\n    }\n    this.setState({ errors })\n  }\n}\n\nupdateDetails(e) {\n  this.setState({\n    [e.target.name]: e.target.value\n  });\n}\n\nonDelete(id) {\n  this.props.deleteGrocery(id)\n}\n\nonBuy(id) {\n  this.props.buyGrocery(id)\n}\n\n  render() {\n    const  { errors } = this.state\n    return (\n      <div>\n        <h1 className=\"text-center\">Grocery Listing  </h1>\n        <div className=\"p-3 mb-2 bg-info text-white\" style={{ float: 'right', padding: '2%' }}>\n          <h4>\n            <TotalPrice groceries={this.props.groceries}/>\n          </h4>\n        </div>\n        <GroceryTable \n          groceries={this.props.groceries}\n          addGrocery={this.addGrocery}\n          deleteGrocery={this.onDelete}\n          buyGrocery={this.onBuy}\n          onShow={this.handleShowEdit}\n        />\n\n        <GroceryModal \n          errors={errors}\n          addGrocery={this.addGrocery}\n          editGrocery={this.editGrocery}\n          updateDetails={this.updateDetails}\n          onHide={this.handleHide}\n          show={this.state.show}\n          groceryName={this.state.groceryName}\n          groceryPrice={this.state.groceryPrice}\n          grocery={this.state.grocery}\n        />\n        <div className=\"text-center\">\n          <button className=\"btn btn-lg btn-primary \"\n            onClick={() => this.setState({ show: true })} >\n            Add Grocery\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => ({\n  groceries: state.groceries\n});\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      addGrocery,\n      deleteGrocery,\n      buyGrocery,\n      editGrocery\n    },\n    dispatch\n  );\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GroceryList);\n","import React, { Component } from 'react';\nimport GroceryList from './GroceryList'\n// import logo from '../logo.svg';\n// import '../styles/App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <GroceryList />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { configureStore } from './store/configureStore';\nimport { loadGroceries } from './actions/groceryAction';\nimport './styles/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = configureStore();\nstore.dispatch(loadGroceries())\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider >, \ndocument.getElementById('root')\n);\n"],"sourceRoot":""}